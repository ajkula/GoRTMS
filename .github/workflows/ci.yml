name: CI Tests

on:
  push:
  pull_request:

jobs:
  # Go tests job
  go-tests:
    name: Go Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        go-version: ['1.23', '1.24']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}
        cache: true
    
    - name: Download Go dependencies
      run: go mod download
    
    - name: Verify Go dependencies
      run: go mod verify
    
    - name: Run Go tests
      run: go test ./... -v -race -coverprofile=coverage.out
    
    - name: Go coverage report
      run: go tool cover -html=coverage.out -o coverage.html
    
    - name: Upload Go coverage to Codecov
      if: matrix.go-version == '1.24'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.out
        flags: backend
        name: go-coverage
    
    - name: Upload coverage artifacts
      if: matrix.go-version == '1.24'
      uses: actions/upload-artifact@v4
      with:
        name: go-coverage
        path: coverage.html

  # Frontend tests job
  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18, 20]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: web/package-lock.json
    
    - name: Install frontend dependencies
      working-directory: ./web
      run: npm ci
    
    - name: Run frontend linting
      working-directory: ./web
      run: npm run lint --if-present
    
    - name: Run frontend tests
      working-directory: ./web
      run: npm run test -- --coverage --watchAll=false
    
    - name: Upload frontend coverage to Codecov
      if: matrix.node-version == '20'
      uses: codecov/codecov-action@v4
      with:
        file: ./web/coverage/lcov.info
        flags: frontend
        name: frontend-coverage
    
    - name: Upload test results
      if: matrix.node-version == '20'
      uses: actions/upload-artifact@v4
      with:
        name: frontend-coverage
        path: web/coverage/

  # Complete build job (optional)
  build:
    name: Build Check
    runs-on: ubuntu-latest
    needs: [go-tests, frontend-tests]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'
        cache: true
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: web/package-lock.json
    
    - name: Build backend
      run: go build -v ./cmd/server
    
    - name: Install frontend dependencies
      working-directory: ./web
      run: npm ci
    
    - name: Build frontend
      working-directory: ./web
      run: npm run build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          server
          web/dist/

  # E2E tests job (optional)
  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: [go-tests, frontend-tests]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'
        cache: true
    
    - name: Run E2E tests
      run: go test ./adapter/inbound/rest -v -run TestE2E
